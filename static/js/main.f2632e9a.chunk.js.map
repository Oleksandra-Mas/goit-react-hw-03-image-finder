{"version":3,"sources":["components/Searchbar/Searchbar.module.scss","components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Modal/Modal.module.scss","components/Loader/Loader.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Button/Button.module.scss","components/Loader/Loader.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","services/apiService.js","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["module","exports","Spinner","className","styles","Loader","type","color","height","width","timeout","Component","ImageGalleryItem","handleImageClick","event","target","dataset","alt","props","toggleModal","url","value","this","webImage","largeImage","tags","onClick","src","ApiService","searchQuery","page","a","axios","get","response","data","newQuery","Button","apiService","STATUS","ImageGallery","state","status","incrementPage","setState","prevProps","prevState","nextFilter","filter","curFilter","nextPage","curPage","resetPage","searchPhoto","photos","total","toast","warning","hits","newPhotos","map","index","id","largeImageURL","webformatURL","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","searchImage","createPortal","Overlay","Searchbar","handleInputChange","toLowerCase","handleSubmit","preventDefault","trim","error","onSubmit","SearchForm","autoComplete","autoFocus","placeholder","onChange","App","showModal","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2632e9a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__31G8C\",\"SearchForm\":\"Searchbar_SearchForm__OdM8t\",\"SearchForm-button\":\"Searchbar_SearchForm-button__QGIvw\",\"SearchForm-button-label\":\"Searchbar_SearchForm-button-label__2NNDJ\",\"SearchForm-input\":\"Searchbar_SearchForm-input__2iUeC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__35HIJ\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__18fl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__10GDr\",\"Modal\":\"Modal_Modal__2tpad\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1EHfq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__31Dnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1AC3N\"};","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport styles from './Loader.module.scss';\r\nexport default class Spinner extends Component {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                className={styles.Loader}\r\n                type=\"BallTriangle\"\r\n                color=\"#3f51b5\"\r\n                height={100}\r\n                width={100}\r\n                timeout={10000}\r\n            />\r\n        );\r\n    }\r\n}\r\n","// import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport styles from './ImageGalleryItem.module.scss';\r\nexport default class ImageGalleryItem extends Component {\r\n    handleImageClick = event => {\r\n        const { dataset, alt } = event.target;\r\n        this.props.toggleModal({\r\n            url: dataset.value,\r\n            alt,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { webImage, largeImage, tags } = this.props;\r\n        return (\r\n            <li\r\n                className={styles.ImageGalleryItem}\r\n                onClick={this.handleImageClick}\r\n            >\r\n                <img\r\n                    className={styles['ImageGalleryItem-image']}\r\n                    src={webImage}\r\n                    alt={tags}\r\n                    data-value={largeImage}\r\n                />\r\n            </li>\r\n        );\r\n    }\r\n}\r\n// ImageGallery.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired\r\n// };\r\n","import axios from 'axios';\r\n\r\nconst BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '23883543-c0e8a740f16e18e27aeb57e6b';\r\nexport default class ApiService {\r\n    constructor() {\r\n        this.searchQuery = '';\r\n        this.page = 1;\r\n    }\r\n    async searchPhoto() {\r\n        const url = `${BASE_URL}/?q=${this.searchQuery}&page=${this.page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n        const response = await axios.get(url);\r\n        return response.data;\r\n    }\r\n    incrementPage() {\r\n        this.page += 1;\r\n    }\r\n\r\n    resetPage() {\r\n        this.page = 1;\r\n    }\r\n\r\n    setPage(page) {\r\n        this.page = page;\r\n    }\r\n\r\n    get query() {\r\n        return this.searchQuery;\r\n    }\r\n\r\n    set query(newQuery) {\r\n        this.searchQuery = newQuery;\r\n    }\r\n}\r\n","// import PropTypes from 'prop-types';\r\n\r\nimport styles from './Button.module.scss';\r\nfunction Button({ onClick }) {\r\n    return (\r\n        <button type=\"button\" className={styles.Button} onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\n// ImageGallery.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired\r\n// };\r\nexport default Button;\r\n","// import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Spinner from '../Loader/Loader';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport styles from './ImageGallery.module.scss';\r\nimport ApiService from '../../services/apiService';\r\nimport Button from '../Button/Button';\r\nconst apiService = new ApiService();\r\n\r\nconst STATUS = {\r\n    idle: 'idle',\r\n    pending: 'pending',\r\n    resolved: 'resolved',\r\n};\r\n\r\nexport default class ImageGallery extends Component {\r\n    state = { status: STATUS.idle, page: 1 };\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        const nextFilter = this.props.filter;\r\n        const curFilter = prevProps.filter;\r\n        const nextPage = this.state.page;\r\n        const curPage = prevState.page;\r\n        if (curFilter !== nextFilter) {\r\n            this.setState({ status: STATUS.pending });\r\n            apiService.searchQuery = nextFilter;\r\n            apiService.resetPage();\r\n            const photos = await apiService.searchPhoto();\r\n            if (photos.total === 0) {\r\n                this.setState({ status: STATUS.idle });\r\n                return toast.warning('Nothing found');\r\n            }\r\n            this.setState({ photos: photos.hits, status: STATUS.resolved });\r\n        }\r\n\r\n        //it changes\r\n        if (nextPage !== curPage && curFilter === nextFilter) {\r\n            this.setState({ status: STATUS.pending });\r\n            const newPhotos = await apiService.searchPhoto();\r\n            if (newPhotos.total === 0) {\r\n                this.setState({ status: STATUS.idle });\r\n                return toast.warning('Nothing else found');\r\n            }\r\n            this.setState({\r\n                photos: [...prevState.photos, ...newPhotos.hits],\r\n                status: STATUS.resolved,\r\n            });\r\n        }\r\n    }\r\n\r\n    onClick = () => {\r\n        apiService.incrementPage();\r\n        this.setState({ page: apiService.page });\r\n    };\r\n\r\n    render() {\r\n        const { photos, status, page } = this.state;\r\n        const { toggleModal } = this.props;\r\n        if (status === STATUS.idle) {\r\n            return null;\r\n        }\r\n        if (\r\n            (status === STATUS.pending && page !== 1) ||\r\n            status === STATUS.resolved\r\n        ) {\r\n            return (\r\n                <>\r\n                    <ul className={styles.ImageGallery}>\r\n                        {photos.map(\r\n                            (\r\n                                { id, largeImageURL, webformatURL, tags },\r\n                                index,\r\n                            ) => (\r\n                                <ImageGalleryItem\r\n                                    key={index}\r\n                                    webImage={webformatURL}\r\n                                    largeImage={largeImageURL}\r\n                                    tags={tags}\r\n                                    toggleModal={toggleModal}\r\n                                />\r\n                            ),\r\n                        )}\r\n                    </ul>\r\n                    {status === STATUS.resolved ? (\r\n                        <Button onClick={this.onClick} />\r\n                    ) : (\r\n                        <Spinner />\r\n                    )}\r\n                </>\r\n            );\r\n        } else if (status === STATUS.pending) {\r\n            return <Spinner />;\r\n        }\r\n    }\r\n}\r\n// ImageGallery.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired\r\n// };\r\n","// import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.scss';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\nexport default class Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose(null);\r\n        }\r\n    };\r\n\r\n    handleBackdropClick = event => {\r\n        if (event.currentTarget === event.target) {\r\n            this.props.onClose(null);\r\n        }\r\n    };\r\n    render() {\r\n        const { url, alt } = this.props.searchImage;\r\n        return createPortal(\r\n            <div className={styles.Overlay} onClick={this.handleBackdropClick}>\r\n                <div className={styles.Modal}>\r\n                    <img src={url} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot,\r\n        );\r\n    }\r\n}\r\n// Modal.propTypes = {\r\n//     onSubmit: PropTypes.func.isRequired\r\n// };\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport styles from './Searchbar.module.scss';\r\nexport default class Searchbar extends Component {\r\n    state = { filter: '' };\r\n    handleInputChange = event => {\r\n        const filter = event.target.value.toLowerCase();\r\n        this.setState({ filter });\r\n    };\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const { filter } = this.state;\r\n        if (filter.trim() === '') {\r\n            return toast.error('Empty input');\r\n        }\r\n        this.props.onSubmit(filter);\r\n        this.setState({ filter: '' });\r\n    };\r\n    render() {\r\n        const { filter } = this.state;\r\n        return (\r\n            <header className={styles.Searchbar}>\r\n                <form\r\n                    onSubmit={this.handleSubmit}\r\n                    className={styles.SearchForm}\r\n                >\r\n                    <button\r\n                        type=\"submit\"\r\n                        className={styles['SearchForm-button']}\r\n                    >\r\n                        <span className={styles['SearchForm-button-label']}>\r\n                            Search\r\n                        </span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={styles['SearchForm-input']}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        value={filter}\r\n                        onChange={this.handleInputChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport './App.css';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport Searchbar from './components/Searchbar/Searchbar';\nexport default class App extends Component {\n    state = { filter: '', showModal: false, searchImage: null };\n\n    handleSubmit = filter => {\n        this.setState({ filter });\n    };\n    toggleModal = data => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n            searchImage: data,\n        }));\n    };\n    render() {\n        const { filter, showModal, searchImage } = this.state;\n        return (\n            <div className=\"App\">\n                <Searchbar onSubmit={this.handleSubmit} />\n                <ImageGallery toggleModal={this.toggleModal} filter={filter} />\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n                {showModal && (\n                    <Modal\n                        searchImage={searchImage}\n                        onClose={this.toggleModal}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}